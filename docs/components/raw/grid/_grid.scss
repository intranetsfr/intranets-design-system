@use 'sass:math';
@use "../../src/scss/variables";

.ids-grid {
    display: flex;
    flex-flow: row wrap;
    margin: 0 auto;
    align-items: stretch;

    &.ids-grid--no-spacing {
        padding: 0;
    }
}

.ids-cell {
    box-sizing: border-box;
}

.ids-cell--top {
    align-self: flex-start;
}

.ids-cell--middle {
    align-self: center;
}

.ids-cell--bottom {
    align-self: flex-end;
}

.ids-cell--stretch {
    align-self: stretch;
}

.ids-grid.ids-grid--no-spacing > .ids-cell {
    margin: 0;
}

// Define order override classes
@for $i from 1 through variables.$grid-max-columns {
    .ids-cell--order-#{$i} {
        order: $i;
    }
}

// Mixins for width calculation
@mixin partial-size($size, $columns, $gutter) {
    width: calc(#{((math.div($size, $columns)) * 100) + '%'} - #{$gutter});

    .ids-grid--no-spacing > & {
        width: #{((math.div($size, $columns)) * 100) + '%'};
    }
}

@mixin full-size($gutter) {
    @include partial-size(1, 1, $gutter);
}

@mixin offset-size($size, $columns, $gutter) {
    margin-left: calc(#{((math.div($size, $columns)) * 100) + '%'} + #{math.div($gutter, 2)});

    .ids-grid.ids-grid--no-spacing > & {
        margin-left: #{(math.div($size, $columns) * 100) + '%'};
    }
}

////////// Phone //////////
@media (max-width: #{variables.$grid-tablet-breakpoint - 1}) {
    .ids-grid {
        padding: variables.$grid-phone-margin - math.div(variables.$grid-phone-gutter, 2);
    }

    .ids-cell {
        margin: math.div(variables.$grid-phone-gutter, 2);
        @include partial-size(
            variables.$grid-cell-default-columns, 
            variables.$grid-phone-columns,
            variables.$grid-phone-gutter
        );
    }

    .ids-cell--hide-phone {
        display: none !important;
    }

    // Define order override classes
    @for $i from 1 through variables.$grid-max-columns {
        .ids-cell--order-#{$i}-phone.ids-cell--order-#{$i}-phone {
            order: $i;
        }
    }

    // Define partial sizes for columnNumber < totalColumns
    @for $i from 1 through (variables.$grid-phone-columns - 1) {
        .ids-cell--#{$i}-col,
        .ids-cell--#{$i}-col-phone.ids-cell--#{$i}-col-phone {
            @include partial-size(
                $i, 
                variables.$grid-phone-columns, 
                variables.$grid-phone-gutter
            );
        }
    }

    // Define 100% for everything else
    @for $i from variables.$grid-phone-columns through variables.$grid-desktop-columns {
        .ids-cell--#{$i}-col,
        .ids-cell--#{$i}-col-phone.ids-cell--#{$i}-col-phone {
            @include full-size(variables.$grid-phone-gutter);
        }
    }

    // Define valid phone offsets
    @for $i from 1 through (variables.$grid-phone-columns - 1) {
        .ids-cell--#{$i}-offset,
        .ids-cell--#{$i}-offset-phone.ids-cell--#{$i}-offset-phone {
            @include offset-size(
                $i, 
                variables.$grid-phone-columns, 
                variables.$grid-phone-gutter
            );
        }
    }
}

////////// Tablet //////////
@media (min-width: variables.$grid-tablet-breakpoint) and (max-width: #{variables.$grid-desktop-breakpoint - 1}) {
    .ids-grid {
        padding: variables.$grid-tablet-margin - math.div(variables.$grid-tablet-gutter, 2);
    }

    .ids-cell {
        margin: math.div(variables.$grid-tablet-gutter, 2);
        @include partial-size(
            variables.$grid-cell-default-columns, 
            variables.$grid-tablet-columns,
            variables.$grid-tablet-gutter
        );
    }

    .ids-cell--hide-tablet {
        display: none !important;
    }

    // Define order override classes
    @for $i from 1 through variables.$grid-max-columns {
        .ids-cell--order-#{$i}-tablet.ids-cell--order-#{$i}-tablet {
            order: $i;
        }
    }

    // Define partial sizes for columnNumber < totalColumns
    @for $i from 1 through (variables.$grid-tablet-columns - 1) {
        .ids-cell--#{$i}-col,
        .ids-cell--#{$i}-col-tablet.ids-cell--#{$i}-col-tablet {
            @include partial-size(
                $i, 
                variables.$grid-tablet-columns, 
                variables.$grid-tablet-gutter
            );
        }
    }

    // Define 100% for everything else
    @for $i from variables.$grid-tablet-columns through variables.$grid-desktop-columns {
        .ids-cell--#{$i}-col,
        .ids-cell--#{$i}-col-tablet.ids-cell--#{$i}-col-tablet {
            @include full-size(variables.$grid-tablet-gutter);
        }
    }

    // Define valid tablet offsets
    @for $i from 1 through (variables.$grid-tablet-columns - 1) {
        .ids-cell--#{$i}-offset,
        .ids-cell--#{$i}-offset-tablet.ids-cell--#{$i}-offset-tablet {
            @include offset-size(
                $i, 
                variables.$grid-tablet-columns, 
                variables.$grid-tablet-gutter
            );
        }
    }
}

////////// Desktop //////////
@media (min-width: variables.$grid-desktop-breakpoint) {
    .ids-grid {
        padding: variables.$grid-desktop-margin - math.div(variables.$grid-desktop-gutter, 2);
    }

    .ids-cell {
        margin: math.div(variables.$grid-desktop-gutter, 2);
        @include partial-size(
            variables.$grid-cell-default-columns, 
            variables.$grid-desktop-columns,
            variables.$grid-desktop-gutter
        );
    }

    .ids-cell--hide-desktop {
        display: none !important;
    }

    // Define order override classes
    @for $i from 1 through variables.$grid-max-columns {
        .ids-cell--order-#{$i}-desktop.ids-cell--order-#{$i}-desktop {
            order: $i;
        }
    }

    // Define partial sizes for all numbers of columns
    @for $i from 1 through variables.$grid-desktop-columns {
        .ids-cell--#{$i}-col,
        .ids-cell--#{$i}-col-desktop.ids-cell--#{$i}-col-desktop {
            @include partial-size(
                $i, 
                variables.$grid-desktop-columns, 
                variables.$grid-desktop-gutter
            );
        }
    }

    // Define valid desktop offsets
    @for $i from 1 through (variables.$grid-desktop-columns - 1) {
        .ids-cell--#{$i}-offset,
        .ids-cell--#{$i}-offset-desktop.ids-cell--#{$i}-offset-desktop {
            @include offset-size(
                $i, 
                variables.$grid-desktop-columns, 
                variables.$grid-desktop-gutter
            );
        }
    }
}